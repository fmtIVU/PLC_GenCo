@using PLC_GenCo.ViewModels

@model PLC_GenCo.ViewModels.AddComponentFactoryViewModel
@{
    ViewBag.Title = "AddComponent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Component setup</h2>



@using (Html.BeginForm("Save", "Factory"))
{

    <div class="form-group">
        @Html.LabelFor(m => m.Component.Name)
        @Html.TextBoxFor(m => m.Component.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Component.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Component.Comment)
        @Html.TextBoxFor(m => m.Component.Comment, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Component.Comment)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Component.Location)
        @Html.DropDownListFor(m => m.Component.Location, new SelectList(Model.ComponentLocations, "Name", "Name"), "Select Location", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Component.Location)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Component.StandardId, "Standard")
        @Html.DropDownListFor(m => m.Component.StandardId, new SelectList(Model.Standards, "Id", "AOIName"), "Select standard", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Component.StandardId)
    </div>

    <div>
        @Html.LabelFor(m => m.Component.Depandancy)
        @Html.EnumDropDownListFor(m => m.Component.Depandancy, "Select depandancy", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Component.Depandancy)
    </div>


    @Html.HiddenFor(m => m.Component.Id)
    @Html.HiddenFor(m => m.Component.IOId)
    @Html.HiddenFor(m => m.Component.ConnectionType)
    <p></p>

    <button type="submit" class="btn btn-primary">Confirm</button>

}
<p>
    <span style="display:inline-block; width: 20%;"></span>
    <input type="button" value="Cancel" class="btn btn-light" onclick="@("window.location.href='" + @Url.Action("Index", "IOList") + "'");" />
</p>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}